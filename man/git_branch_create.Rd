% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/git_branch_create.R
\name{git_branch_create}
\alias{git_branch_create}
\title{Create a new branch}
\usage{
git_branch_create(name, repo = ".", sha = character())
}
\arguments{
\item{name}{Name for the new branch}

\item{repo}{Path to a Git repo. If unspecified, current working directory is
checked to see if it is or is inside a Git repo.}

\item{sha}{The SHA of a commit in \code{repo}}
}
\description{
Create a new local branch. You must specify the \code{name} of the new
branch, at the very least. By default, the new branch will point at current
HEAD. Optionally, you can specify another commit to base the branch on, via
its SHA.
}
\details{
Convenience wrapper around
\code{\link[git2r:branch_create]{git2r::branch_create}()}.
}
\examples{
repo <- git_init(tempfile("githug-branches-"))
owd <- setwd(repo)

## first commit
writeLines("Well, we're not in the middle of nowhere...", "nowhere.txt")
git_commit("nowhere.txt", message = "1: not in the middle of nowhere")
git_branch_list()

## second commit
write("but we can see it from here.", "nowhere.txt", append = TRUE)
git_commit("nowhere.txt", message = "2: but we can see it from here")

## create new branch that points at HEAD = second commit
git_branch_create("carpe_diem")
git_branch_list()

## create new branch that points at *first commit*, via its SHA
(gl <- git_history())
git_branch_create("hindsight", sha = gl$sha[[2]])
git_branch_list()

\dontrun{
## try to re-create an existing branch and fail
git_branch_create("hindsight")
}

setwd(owd)
}

