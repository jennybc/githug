% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/git_branch.R
\name{githug-branch}
\alias{git_branch}
\alias{git_branch_current}
\alias{git_branch_list}
\alias{githug-branch}
\title{Report current or list all branches}
\usage{
git_branch(where = NULL, repo = ".")

git_branch_current(repo = ".")

git_branch_list(where = c("local", "all", "remote"), repo = ".")
}
\arguments{
\item{where}{Which branches to list: \code{local} only (the default),
\code{all}, or \code{remote} only.}

\item{repo}{Path to a Git repo. If unspecified, current working directory is
checked to see if it is or is inside a Git repo.}
}
\description{
Report which branch you're currently on or list all local and/or remote
branches in the repository.
}
\section{git_branch}{


  If called with no arguments, or with only the \code{repo} argument,
  \code{git_branch()} reports the name of the current branch. This is
  equivalent to calling \code{git_branch_current()} directly.

  If the \code{where} argument is given, its value is passed through to
  \code{git_branch_list()}.



  \code{git_branch()} tells which branch you're currently on.
}

\section{git_branch_list}{


  \code{git_branch_list()} returns a data frame of information provided by
  \code{\link[git2r:branches]{git2r::branches}()}.

How it corresponds to command line Git:

\describe{
  \item{\code{git_branch_list()}}{is like \code{git branch}. Lists local
  branches.}
  \item{\code{git_branch_list(where = "all")}}{is like \code{git branch -a}.
  Lists all branches, local and remote.}
  \item{\code{git_branch_list(where = "remote")}}{is like \code{git branch
  -r}. Lists remote branches.}
}
}
\examples{
repo <- git_init(tempfile("githug-branches-"))
owd <- setwd(repo)

## no commits --> no branches
git_branch()
git_branch_list()

## commit and ... now we have master
writeLines("Well, we're not in the middle of nowhere...", "nowhere.txt")
git_commit(all = TRUE, message = "1ouise: not in the middle of nowhere")
git_branch()
git_branch_list()

setwd(owd)
}

